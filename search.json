[{"path":[]},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jumpingrivers.github.io/namer/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jumpingrivers.github.io/namer/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to namer","title":"Contributing to namer","text":"outlines propose change namer. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://jumpingrivers.github.io/namer/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to namer","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jumpingrivers.github.io/namer/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to namer","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://jumpingrivers.github.io/namer/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to namer","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jumpingrivers/namer\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jumpingrivers.github.io/namer/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to namer","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jumpingrivers.github.io/namer/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to namer","text":"Please note namer project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jumpingrivers.github.io/namer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 namer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jumpingrivers.github.io/namer/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with namer","title":"Getting help with namer","text":"Thanks using namer! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jumpingrivers.github.io/namer/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with namer","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jumpingrivers.github.io/namer/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with namer","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jumpingrivers.github.io/namer/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with namer","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jumpingrivers.github.io/namer/articles/namer.html","id":"use","dir":"Articles","previous_headings":"","what":"Use","title":"Intro to the namer package","text":"basic example shows solve common problem. “test” folder first contains R Markdown files unnamed chunks. running name_dir_chunks, ’re named, names using filenames basis. ’s also name_chunks() use single R Markdown file; unname_chunks() unname chunks single R Markdown file well unname_dir_chunks() unname chunks R Markdown files directory, can useful cleaning chunk labels. default unname_chunks() unnames chunks exception ‘setup’ chunk. using argument chunk_name_prefix one can indicate prefix labels unnamed. Useful one refers label using chunk option ref.label inconvenient label unnamed. setting chunk_name_prefix equal ‘filename extension stripped’ followed ‘-’ (dash) labels generated name_chunks() unnamed. ’re working RStudio, installing package installed addin labelling chunks R Markdown document select. using {namer}, please check edits pushing code base. automatic chunk labelling best paired version control.","code":"fs::dir_copy(system.file(\"examples\", package = \"namer\"),             \"test\") name_dir_chunks(\"test\") file.edit(\"test/example1.Rmd\")"},{"path":"https://jumpingrivers.github.io/namer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rhian Davies. Author, maintainer. Steph Locke. Author. Maëlle Salmon. Author. Ellis Valentiner. Contributor. Charlie Hadley. Contributor. Jumping Rivers. Funder.            https://jumpingrivers.com Han Oostdijk. Contributor. Patrick Schratz. Contributor.","code":""},{"path":"https://jumpingrivers.github.io/namer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davies R, Locke S, Salmon M (2022). namer: Names 'R Markdown' Chunks. https://github.com/jumpingrivers/namer, https://jumpingrivers.github.io/namer/.","code":"@Manual{,   title = {namer: Names Your 'R Markdown' Chunks},   author = {Rhian Davies and Steph Locke and Maëlle Salmon},   year = {2022},   note = {https://github.com/jumpingrivers/namer, https://jumpingrivers.github.io/namer/}, }"},{"path":"https://jumpingrivers.github.io/namer/index.html","id":"namer","dir":"","previous_headings":"","what":"Names Your R Markdown Chunks","title":"Names Your R Markdown Chunks","text":"goal {namer} name chunks R Markdown files. ’s safety net ’ve (willingly) forgotten name chunks R Markdown files folder. {namer} give meaningful labels chunks, gives labels won’t change depending position like automatic knitr:::unnamed_chunk function knitting. can e.g. shuffle chunks loose cache, easily debug whole folder! context name R Markdown chunks, read blog post. screenshot real life example, result running namer::name_dir_chunks(\"pres\"). files dir “pres”, labelled chunks using filename numbers.","code":""},{"path":"https://jumpingrivers.github.io/namer/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Names Your R Markdown Chunks","text":"basic example shows solve common problem. “test” folder first contains R Markdown files unnamed chunks. running name_dir_chunks, ’re named, names using filenames basis. ’s also name_chunks() use single R Markdown file; unname_chunks() unname chunks single R Markdown file well unname_dir_chunks() unname chunks R Markdown files directory, can useful cleaning chunk labels. default unname_chunks() unnames chunks exception ‘setup’ chunk. using argument chunk_name_prefix one can indicate prefix labels unnamed. Useful one refers label using chunk option ref.label inconvenient label unnamed. setting chunk_name_prefix equal ‘filename extension stripped’ followed ‘-’ (dash) labels generated name_chunks() unnamed. ’re working RStudio, installing package installed addin labelling chunks R Markdown document select. using {namer}, please check edits pushing code base. automatic chunk labelling best paired version control.","code":"fs::dir_copy(system.file(\"examples\", package = \"namer\"),             \"test\") name_dir_chunks(\"test\") file.edit(\"test/example1.Rmd\")"},{"path":"https://jumpingrivers.github.io/namer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Names Your R Markdown Chunks","text":"Install {namer} CRAN get dev version repo using:","code":"install.packages(\"namer\") remotes::install_github(\"jumpingrivers/namer\")"},{"path":"https://jumpingrivers.github.io/namer/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Names Your R Markdown Chunks","text":"Please note namer project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Name chunks in a single file — name_chunks","title":"Name chunks in a single file — name_chunks","text":"Name unnamed chunks single file using filename extension stripped basis.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name chunks in a single file — name_chunks","text":"","code":"name_chunks(path, unname = FALSE)"},{"path":"https://jumpingrivers.github.io/namer/reference/name_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name chunks in a single file — name_chunks","text":"path Path file unname chunks unnamed naming? Default `FALSE`. Turning option cause existing labels overwritten. contrast, default `unname = FALSE` unlabelled chunks named.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name chunks in a single file — name_chunks","text":"Always returns TRUE invisibly. Called side effects.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_chunks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Name chunks in a single file — name_chunks","text":"using namer, please check edits  pushing code base. automatic  chunk labelling best paired version control.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name chunks in a single file — name_chunks","text":"","code":"temp_file_path <- file.path(tempdir(), \"test.Rmd\") file.copy(system.file(\"examples\", \"example1.Rmd\", package = \"namer\"),           temp_file_path,           overwrite = TRUE) #> [1] TRUE name_chunks(temp_file_path) if(interactive()){ file.edit(temp_file_path) } file.remove(temp_file_path) #> [1] TRUE"},{"path":"https://jumpingrivers.github.io/namer/reference/name_dir_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Name chunks of all Rmds in a dir — name_dir_chunks","title":"Name chunks of all Rmds in a dir — name_dir_chunks","text":"Name unnamed chunks dir using filenames extension stripped basis.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_dir_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name chunks of all Rmds in a dir — name_dir_chunks","text":"","code":"name_dir_chunks(dir, unname = FALSE)"},{"path":"https://jumpingrivers.github.io/namer/reference/name_dir_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name chunks of all Rmds in a dir — name_dir_chunks","text":"dir Path folder unname chunks unnamed naming? Default `FALSE`. Turning option cause existing labels overwritten. contrast, default `unname = FALSE` unlabelled chunks named.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_dir_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name chunks of all Rmds in a dir — name_dir_chunks","text":"Always returns TRUE invisibly. Called side effects.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_dir_chunks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Name chunks of all Rmds in a dir — name_dir_chunks","text":"using namer, please check edits  pushing code base. automatic  chunk labelling best paired version control.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/name_dir_chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name chunks of all Rmds in a dir — name_dir_chunks","text":"","code":"temp_dir <- tempdir() # just to make sure we're not overwriting if(fs::dir_exists(file.path(temp_dir, \"examples\"))){ fs::dir_delete(file.path(temp_dir, \"examples\")) } fs::dir_copy(system.file(\"examples\", package = \"namer\"),             temp_dir)  # this is an example file that'd fail fs::file_delete(file.path(temp_dir,                          \"examples\", \"example4.Rmd\")) name_dir_chunks(temp_dir) #> ── Naming all chunks ─────────────────────────────────────────────────────────── if(interactive()){ file.edit(file.path(temp_dir,                    \"examples\", \"example1.Rmd\")) }"},{"path":"https://jumpingrivers.github.io/namer/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://jumpingrivers.github.io/namer/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Unname chunks in a single file — unname_chunks","title":"Unname chunks in a single file — unname_chunks","text":"Unname single file chunks, alternatively unname chunknames given prefix. cases, chunk name \"setup\" preserved, chunk never unnamed.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unname chunks in a single file — unname_chunks","text":"","code":"unname_chunks(path, chunk_name_prefix = NULL)  unname_all_chunks(path, chunk_name_prefix = NULL)"},{"path":"https://jumpingrivers.github.io/namer/reference/unname_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unname chunks in a single file — unname_chunks","text":"path Path file chunk_name_prefix Character string prefix chunknames removed. Default: NULL (indicating chunknames removed except one named `setup`)","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unname chunks in a single file — unname_chunks","text":"Always returns TRUE invisibly. Called side effects.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_chunks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unname chunks in a single file — unname_chunks","text":"using namer, please check edits  pushing code base. automatic  chunk labelling best paired version control.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unname chunks in a single file — unname_chunks","text":"","code":"# remove all chunklabels except the one named 'setup' temp_file_path <- file.path(tempdir(), \"test1.Rmd\") file.copy(system.file(\"examples\", \"example4.Rmd\", package = \"namer\"),           temp_file_path,           overwrite = TRUE) #> [1] TRUE unname_chunks(temp_file_path) if(interactive()){ file.edit(temp_file_path) } # remove all chunk labels starting with 'example4' temp_file_path <- file.path(tempdir(), \"test2.Rmd\") file.copy(system.file(\"examples\", \"example4.Rmd\", package = \"namer\"),           temp_file_path,           overwrite = TRUE) #> [1] TRUE unname_chunks(temp_file_path,chunk_name_prefix='example4') if(interactive()){ file.edit(temp_file_path) }"},{"path":"https://jumpingrivers.github.io/namer/reference/unname_dir_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Unname chunks of all Rmds in a dir — unname_dir_chunks","title":"Unname chunks of all Rmds in a dir — unname_dir_chunks","text":"Name unnamed chunks dir using filenames extension stripped basis.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_dir_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unname chunks of all Rmds in a dir — unname_dir_chunks","text":"","code":"unname_dir_chunks(dir)"},{"path":"https://jumpingrivers.github.io/namer/reference/unname_dir_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unname chunks of all Rmds in a dir — unname_dir_chunks","text":"dir Path folder","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_dir_chunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unname chunks of all Rmds in a dir — unname_dir_chunks","text":"Always returns TRUE invisibly. Called side effects.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_dir_chunks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unname chunks of all Rmds in a dir — unname_dir_chunks","text":"using namer, please check edits  pushing code base. automatic  chunk labelling best paired version control.","code":""},{"path":"https://jumpingrivers.github.io/namer/reference/unname_dir_chunks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unname chunks of all Rmds in a dir — unname_dir_chunks","text":"","code":"temp_dir <- tempdir() # just to make sure we're not overwriting if(fs::dir_exists(file.path(temp_dir, \"examples\"))){ fs::dir_delete(file.path(temp_dir, \"examples\")) } fs::dir_copy(system.file(\"examples\", package = \"namer\"),             temp_dir)  # this is an example file that'd fail fs::file_delete(file.path(temp_dir,                          \"examples\", \"example4.Rmd\")) name_dir_chunks(temp_dir) #> ── Naming all chunks ─────────────────────────────────────────────────────────── #> Scanning /tmp/RtmpdK2qlS/test1.Rmd... #> Scanning /tmp/RtmpdK2qlS/test2.Rmd... if(interactive()){ file.edit(file.path(temp_dir,                    \"examples\", \"example1.Rmd\")) }"},{"path":"https://jumpingrivers.github.io/namer/news/index.html","id":"namer-016","dir":"Changelog","previous_headings":"","what":"namer 0.1.6","title":"namer 0.1.6","text":"CRAN release: 2022-10-06 Update maintainer","code":""},{"path":"https://jumpingrivers.github.io/namer/news/index.html","id":"namer-development-version","dir":"Changelog","previous_headings":"","what":"namer (development version)","title":"namer (development version)","text":"name_chunks() name_dir_chunks() now able unname chunks naming . ensures consistent naming chunks instead just labelling unnamed chunks (@pat-s, #23). new function unname_dir_chunks() works way name_dir_chunks() (@pat-s, #23) rename unname_all_chunks() unname_chunks() consistent name_chunks() (@pat-s, #23). unname_all_chunks() deprecated future version currently gives warning. added cli verbosity (@pat-s, #23)","code":""},{"path":"https://jumpingrivers.github.io/namer/news/index.html","id":"namer-015","dir":"Changelog","previous_headings":"","what":"namer 0.1.5","title":"namer 0.1.5","text":"CRAN release: 2019-12-16 tests using rmarkdown now skipped Pandoc 1.12.3 (minimal version rmarkdown) available. unname_all_chunks now accepts argument chunk_name_prefix prefix chunknames unnamed (@HanOostdijk, #22)","code":""},{"path":"https://jumpingrivers.github.io/namer/news/index.html","id":"namer-014","dir":"Changelog","previous_headings":"","what":"namer 0.1.4","title":"namer 0.1.4","text":"CRAN release: 2019-03-26 regex recognizing beginning chunk now demands ``` beginning line (@gorkang, #17). Replace LaTeX special characters - better support text references bookdown @martinjhnhadley","code":""},{"path":"https://jumpingrivers.github.io/namer/news/index.html","id":"namer-013","dir":"Changelog","previous_headings":"","what":"namer 0.1.3","title":"namer 0.1.3","text":"CRAN release: 2018-10-30 examples file.edit happens interactive().","code":""},{"path":"https://jumpingrivers.github.io/namer/news/index.html","id":"namer-012","dir":"Changelog","previous_headings":"","what":"namer 0.1.2","title":"namer 0.1.2","text":"Testable examples unwrapped. Fixed test temporary directory deleted.","code":""},{"path":"https://jumpingrivers.github.io/namer/news/index.html","id":"namer-011","dir":"Changelog","previous_headings":"","what":"namer 0.1.1","title":"namer 0.1.1","text":"longer depends stringr. Uses temporary directory examples, tests, vignette. RStudio add-allows selecting R Markdown file, longer modifies current active document (@ellisvalentiner, #14).","code":""},{"path":"https://jumpingrivers.github.io/namer/news/index.html","id":"namer-010","dir":"Changelog","previous_headings":"","what":"namer 0.1.0","title":"namer 0.1.0","text":"First release. Added NEWS.md file track changes package.","code":""}]
